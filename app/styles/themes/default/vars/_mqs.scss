$mt3_mq-sm: 'screen and (min-width: 30em)';
$mt3_mq-md: 'screen and (min-width: 50em)';
$mt3_mq-lg: 'screen and (min-width: 70em)';

// Example Use
// ===========
//
// mq variables will need to be interpolated like so:
//
// @media #{$mt3_mq-sm} {
//     div {
//         color: red;
//     }
// }


$mt3_layout-bps: (
  sm: $mt3_mq-sm,
  md: $mt3_mq-md,
  lg: $mt3_mq-lg
);

$screen-s: 768px;
$screen-m: 1024px;
$screen-l: 1280px;

// This function check if the screen responds to the proper size
// @param $breakpoint this parameter accept s, m, l, xl values.
@mixin respond-to($breakpoint) {

  @if $breakpoint == s {
    @media (max-width: #{$screen-s - 1}) {
      @content;
    }
  }

  @else if $breakpoint == m {
    // respond to medium and small
    @media (min-width: #{$screen-s}) and (max-width: #{$screen-m - 1}) {
      @content;
    }
  }

  @else if $breakpoint == l {
    // respond to medium and bigweb
    @media (min-width: #{$screen-m}) and (max-width: #{$screen-l - 1}) {
      @content;
    }
  }

  @else if $breakpoint == xl {
    // respond to medium and bigweb
    @media (min-width: #{$screen-l}) {
      @content;
    }
  }

}

@mixin respond-to-multiple($breakpoints...) {
  @each $item in $breakpoints {
    @if $item != null {
      @include respond-to($item) {
        @content;
      }
    }
  }
}
