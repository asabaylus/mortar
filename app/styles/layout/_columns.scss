$mt_columns: 12;

// Object oriented grid classes in the style of bootstrap
// Reference: http://getbootstrap.com/css/#grid

%mt_col-padding {
  float: left;
  position: relative;
  width: 100%;
}

@for $mt_i from 1 through $mt_columns { // loop through grid spans
  .mt_col-#{$mt_i} { // build the class name
    @extend %mt_col-padding;

    width: percentage($mt_i / $mt_columns);
  }

  .mt_col-offset-#{$mt_i} {
    margin-left: percentage($mt_i / $mt_columns);
  }

  .mt_col-pull-#{$mt_i} {
    right: percentage($mt_i / $mt_columns);
  }

  .mt_col-push-#{$mt_i} {
    left: percentage($mt_i / $mt_columns);
  }
}

.mt_col-offset-0 {
  margin-left: 0;
}

.mt_col-pull-0 {
  right: auto;
}

.mt_col-push-0 {
  left: auto;
}

@each $mt_bp, $mt_width in $mt_layout-bps { // loop through breakpoints
  // hack to get around inability to extend from within media queries
  @for $mt_i from 1 through $mt_columns {
    .mt_col-#{$mt_bp}-#{$mt_i} {
      @extend %mt_col-padding;
    }
  }

  @media #{$mt_width} {
    @for $mt_i from 1 through $mt_columns {
      .mt_col-#{$mt_bp}-#{$mt_i} {
        width: percentage($mt_i / $mt_columns);
      }

      .mt_col-#{$mt_bp}-offset-#{$mt_i} {
        margin-left: percentage($mt_i / $mt_columns);
      }

      .mt_col-#{$mt_bp}-pull-#{$mt_i} {
        right: percentage($mt_i / $mt_columns);
      }

      .mt_col-#{$mt_bp}-push-#{$mt_i} {
        left: percentage($mt_i / $mt_columns);
      }
    }

    .mt_col-#{$mt_bp}-offset-0 {
      margin-left: 0;
    }

    .mt_col-#{$mt_bp}-pull-0 {
      right: auto;
    }

    .mt_col-#{$mt_bp}-push-0 {
      left: auto;
    }
  }
}
